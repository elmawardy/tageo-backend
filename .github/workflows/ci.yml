# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow integrates njsscan with GitHub's Code Scanning feature
# nodejsscan is a static security code scanner that finds insecure code patterns in your Node.js applications
name: CI
on:
  push:
    branches: [ "main","ci" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  schedule:
    - cron: '39 5 * * 2'
permissions:
  contents: read
jobs:

  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
      paths_result: ${{ steps.skip_check.outputs.paths_result }}

    permissions:
      actions: write
      contents: read

    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v4
        with:
          paths_ignore: '["**/*.md","LICENSE"]'
          concurrent_skipping: 'same_content_newer'
      - if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
        run: |
          echo "Workflow won't be skipped"

  njsscan:
    runs-on: ubuntu-latest
    name: njsscan code scanning
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'

    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF 
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2
    - name: nodejsscan scan
      id: njsscan
      uses: ajinabraham/njsscan-action@master
      with:
        args: '. --sarif --output results.sarif || true'
    - name: Upload njsscan report
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: results.sarif

  sonarcloud:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
  testing:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'
    permissions:
      contents: read # for actions/checkout to fetch code
      # actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status 
    runs-on: ubuntu-latest
    # container: node:16-bullseye
    # services:
    #   mongo:
    #     image: mongo:6.0.1
    name: Integration Testing
    steps:
    - name: Checkout the code
      uses: actions/checkout@v3
    - name: Starting containers
      run: |
        docker-compose up -d
    - name: Running tests
      run: |
        yarn install
        npm install --global mocha
        yarn test
    - name: Stop containers
      if: always()
      run: docker-compose -f "docker-compose.yaml" down
    - uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
        files: coverage/**/cobertura-coverage.xml # optional
        flags: unittests # optional
        name: codecov-umbrella # optional
        fail_ci_if_error: true # optional (default = false)
        verbose: true # optional (default = false)

    # - name: Code Coverage Report
    #   uses: irongut/CodeCoverageSummary@v1.3.0
    #   with:
    #     filename: coverage/**/cobertura-coverage.xml
    #     badge: true
    #     fail_below_min: true
    #     format: markdown
    #     hide_branch_rate: false
    #     hide_complexity: true
    #     indicators: true
    #     output: both
    #     thresholds: '60 80'